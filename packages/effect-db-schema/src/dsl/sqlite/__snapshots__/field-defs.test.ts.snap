// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`FieldDefs > boolean 1`] = `
{
  "columnType": "integer",
  "default": {
    "_id": "Option",
    "_tag": "None",
  },
  "nullable": false,
  "primaryKey": false,
  "schema": $transformOrFail {
    "ast": {
      "_tag": "Transformation",
      "annotations": {},
      "from": {
        "_tag": "NumberKeyword",
        "annotations": {
          "Symbol(@effect/schema/annotation/Description)": "a number",
          "Symbol(@effect/schema/annotation/Title)": "number",
        },
      },
      "to": {
        "_tag": "BooleanKeyword",
        "annotations": {
          "Symbol(@effect/schema/annotation/Description)": "a boolean",
          "Symbol(@effect/schema/annotation/Title)": "boolean",
        },
      },
    },
    "from": Schema {
      "ast": {
        "_tag": "NumberKeyword",
        "annotations": {
          "Symbol(@effect/schema/annotation/Description)": "a number",
          "Symbol(@effect/schema/annotation/Title)": "number",
        },
      },
      Symbol(@effect/schema/Schema): {
        "_A": [Function],
        "_I": [Function],
        "_R": [Function],
      },
    },
    "to": Schema {
      "ast": {
        "_tag": "BooleanKeyword",
        "annotations": {
          "Symbol(@effect/schema/annotation/Description)": "a boolean",
          "Symbol(@effect/schema/annotation/Title)": "boolean",
        },
      },
      Symbol(@effect/schema/Schema): {
        "_A": [Function],
        "_I": [Function],
        "_R": [Function],
      },
    },
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > boolean 2`] = `
{
  "columnType": "integer",
  "default": {
    "_id": "Option",
    "_tag": "None",
  },
  "nullable": false,
  "primaryKey": false,
  "schema": $transformOrFail {
    "ast": {
      "_tag": "Transformation",
      "annotations": {},
      "from": {
        "_tag": "NumberKeyword",
        "annotations": {
          "Symbol(@effect/schema/annotation/Description)": "a number",
          "Symbol(@effect/schema/annotation/Title)": "number",
        },
      },
      "to": {
        "_tag": "BooleanKeyword",
        "annotations": {
          "Symbol(@effect/schema/annotation/Description)": "a boolean",
          "Symbol(@effect/schema/annotation/Title)": "boolean",
        },
      },
    },
    "from": Schema {
      "ast": {
        "_tag": "NumberKeyword",
        "annotations": {
          "Symbol(@effect/schema/annotation/Description)": "a number",
          "Symbol(@effect/schema/annotation/Title)": "number",
        },
      },
      Symbol(@effect/schema/Schema): {
        "_A": [Function],
        "_I": [Function],
        "_R": [Function],
      },
    },
    "to": Schema {
      "ast": {
        "_tag": "BooleanKeyword",
        "annotations": {
          "Symbol(@effect/schema/annotation/Description)": "a boolean",
          "Symbol(@effect/schema/annotation/Title)": "boolean",
        },
      },
      Symbol(@effect/schema/Schema): {
        "_A": [Function],
        "_I": [Function],
        "_R": [Function],
      },
    },
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > boolean 3`] = `
{
  "columnType": "integer",
  "default": {
    "_id": "Option",
    "_tag": "Some",
    "value": false,
  },
  "nullable": false,
  "primaryKey": false,
  "schema": $transformOrFail {
    "ast": {
      "_tag": "Transformation",
      "annotations": {},
      "from": {
        "_tag": "NumberKeyword",
        "annotations": {
          "Symbol(@effect/schema/annotation/Description)": "a number",
          "Symbol(@effect/schema/annotation/Title)": "number",
        },
      },
      "to": {
        "_tag": "BooleanKeyword",
        "annotations": {
          "Symbol(@effect/schema/annotation/Description)": "a boolean",
          "Symbol(@effect/schema/annotation/Title)": "boolean",
        },
      },
    },
    "from": Schema {
      "ast": {
        "_tag": "NumberKeyword",
        "annotations": {
          "Symbol(@effect/schema/annotation/Description)": "a number",
          "Symbol(@effect/schema/annotation/Title)": "number",
        },
      },
      Symbol(@effect/schema/Schema): {
        "_A": [Function],
        "_I": [Function],
        "_R": [Function],
      },
    },
    "to": Schema {
      "ast": {
        "_tag": "BooleanKeyword",
        "annotations": {
          "Symbol(@effect/schema/annotation/Description)": "a boolean",
          "Symbol(@effect/schema/annotation/Title)": "boolean",
        },
      },
      Symbol(@effect/schema/Schema): {
        "_A": [Function],
        "_I": [Function],
        "_R": [Function],
      },
    },
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > datetime 1`] = `
{
  "columnType": "text",
  "default": {
    "_id": "Option",
    "_tag": "None",
  },
  "nullable": false,
  "primaryKey": false,
  "schema": Schema {
    "ast": {
      "_tag": "Refinement",
      "annotations": {
        "Symbol(@effect/schema/annotation/Description)": "a valid Date",
        "Symbol(@effect/schema/annotation/Identifier)": "Date",
        "Symbol(@effect/schema/annotation/Type)": Symbol(@effect/schema/TypeId/ValidDate),
      },
      "from": {
        "_tag": "Transformation",
        "annotations": {
          "Symbol(@effect/schema/annotation/Identifier)": "DateFromString",
        },
        "from": {
          "_tag": "StringKeyword",
          "annotations": {
            "Symbol(@effect/schema/annotation/Description)": "a string",
            "Symbol(@effect/schema/annotation/Title)": "string",
          },
        },
        "to": {
          "_tag": "Declaration",
          "annotations": {
            "Symbol(@effect/schema/ArbitraryHookId)": [Function],
            "Symbol(@effect/schema/EquivalenceHookId)": [Function],
            "Symbol(@effect/schema/PrettyHookId)": [Function],
            "Symbol(@effect/schema/annotation/Description)": "a potentially invalid Date instance",
            "Symbol(@effect/schema/annotation/Identifier)": "DateFromSelf",
          },
          "typeParameters": [],
        },
      },
    },
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > datetime 2`] = `
{
  "columnType": "text",
  "default": {
    "_id": "Option",
    "_tag": "None",
  },
  "nullable": false,
  "primaryKey": false,
  "schema": Schema {
    "ast": {
      "_tag": "Refinement",
      "annotations": {
        "Symbol(@effect/schema/annotation/Description)": "a valid Date",
        "Symbol(@effect/schema/annotation/Identifier)": "Date",
        "Symbol(@effect/schema/annotation/Type)": Symbol(@effect/schema/TypeId/ValidDate),
      },
      "from": {
        "_tag": "Transformation",
        "annotations": {
          "Symbol(@effect/schema/annotation/Identifier)": "DateFromString",
        },
        "from": {
          "_tag": "StringKeyword",
          "annotations": {
            "Symbol(@effect/schema/annotation/Description)": "a string",
            "Symbol(@effect/schema/annotation/Title)": "string",
          },
        },
        "to": {
          "_tag": "Declaration",
          "annotations": {
            "Symbol(@effect/schema/ArbitraryHookId)": [Function],
            "Symbol(@effect/schema/EquivalenceHookId)": [Function],
            "Symbol(@effect/schema/PrettyHookId)": [Function],
            "Symbol(@effect/schema/annotation/Description)": "a potentially invalid Date instance",
            "Symbol(@effect/schema/annotation/Identifier)": "DateFromSelf",
          },
          "typeParameters": [],
        },
      },
    },
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > datetime 3`] = `
{
  "columnType": "text",
  "default": {
    "_id": "Option",
    "_tag": "Some",
    "value": null,
  },
  "nullable": true,
  "primaryKey": false,
  "schema": $union {
    "ast": {
      "_tag": "Union",
      "annotations": {},
      "types": [
        {
          "_tag": "Refinement",
          "annotations": {
            "Symbol(@effect/schema/annotation/Description)": "a valid Date",
            "Symbol(@effect/schema/annotation/Identifier)": "Date",
            "Symbol(@effect/schema/annotation/Type)": Symbol(@effect/schema/TypeId/ValidDate),
          },
          "from": {
            "_tag": "Transformation",
            "annotations": {
              "Symbol(@effect/schema/annotation/Identifier)": "DateFromString",
            },
            "from": {
              "_tag": "StringKeyword",
              "annotations": {
                "Symbol(@effect/schema/annotation/Description)": "a string",
                "Symbol(@effect/schema/annotation/Title)": "string",
              },
            },
            "to": {
              "_tag": "Declaration",
              "annotations": {
                "Symbol(@effect/schema/ArbitraryHookId)": [Function],
                "Symbol(@effect/schema/EquivalenceHookId)": [Function],
                "Symbol(@effect/schema/PrettyHookId)": [Function],
                "Symbol(@effect/schema/annotation/Description)": "a potentially invalid Date instance",
                "Symbol(@effect/schema/annotation/Identifier)": "DateFromSelf",
              },
              "typeParameters": [],
            },
          },
        },
        {
          "_tag": "Literal",
          "annotations": {
            "Symbol(@effect/schema/annotation/Identifier)": "null",
          },
          "literal": null,
        },
      ],
    },
    "members": [
      Schema {
        "ast": {
          "_tag": "Refinement",
          "annotations": {
            "Symbol(@effect/schema/annotation/Description)": "a valid Date",
            "Symbol(@effect/schema/annotation/Identifier)": "Date",
            "Symbol(@effect/schema/annotation/Type)": Symbol(@effect/schema/TypeId/ValidDate),
          },
          "from": {
            "_tag": "Transformation",
            "annotations": {
              "Symbol(@effect/schema/annotation/Identifier)": "DateFromString",
            },
            "from": {
              "_tag": "StringKeyword",
              "annotations": {
                "Symbol(@effect/schema/annotation/Description)": "a string",
                "Symbol(@effect/schema/annotation/Title)": "string",
              },
            },
            "to": {
              "_tag": "Declaration",
              "annotations": {
                "Symbol(@effect/schema/ArbitraryHookId)": [Function],
                "Symbol(@effect/schema/EquivalenceHookId)": [Function],
                "Symbol(@effect/schema/PrettyHookId)": [Function],
                "Symbol(@effect/schema/annotation/Description)": "a potentially invalid Date instance",
                "Symbol(@effect/schema/annotation/Identifier)": "DateFromSelf",
              },
              "typeParameters": [],
            },
          },
        },
        Symbol(@effect/schema/Schema): {
          "_A": [Function],
          "_I": [Function],
          "_R": [Function],
        },
      },
      Schema {
        "ast": {
          "_tag": "Literal",
          "annotations": {
            "Symbol(@effect/schema/annotation/Identifier)": "null",
          },
          "literal": null,
        },
        Symbol(@effect/schema/Schema): {
          "_A": [Function],
          "_I": [Function],
          "_R": [Function],
        },
      },
    ],
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > datetime 4`] = `
{
  "columnType": "text",
  "default": {
    "_id": "Option",
    "_tag": "Some",
    "value": 2022-02-02T00:00:00.000Z,
  },
  "nullable": false,
  "primaryKey": false,
  "schema": Schema {
    "ast": {
      "_tag": "Refinement",
      "annotations": {
        "Symbol(@effect/schema/annotation/Description)": "a valid Date",
        "Symbol(@effect/schema/annotation/Identifier)": "Date",
        "Symbol(@effect/schema/annotation/Type)": Symbol(@effect/schema/TypeId/ValidDate),
      },
      "from": {
        "_tag": "Transformation",
        "annotations": {
          "Symbol(@effect/schema/annotation/Identifier)": "DateFromString",
        },
        "from": {
          "_tag": "StringKeyword",
          "annotations": {
            "Symbol(@effect/schema/annotation/Description)": "a string",
            "Symbol(@effect/schema/annotation/Title)": "string",
          },
        },
        "to": {
          "_tag": "Declaration",
          "annotations": {
            "Symbol(@effect/schema/ArbitraryHookId)": [Function],
            "Symbol(@effect/schema/EquivalenceHookId)": [Function],
            "Symbol(@effect/schema/PrettyHookId)": [Function],
            "Symbol(@effect/schema/annotation/Description)": "a potentially invalid Date instance",
            "Symbol(@effect/schema/annotation/Identifier)": "DateFromSelf",
          },
          "typeParameters": [],
        },
      },
    },
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > json 1`] = `
{
  "columnType": "text",
  "default": {
    "_id": "Option",
    "_tag": "None",
  },
  "nullable": false,
  "primaryKey": false,
  "schema": Schema {
    "ast": {
      "_tag": "Transformation",
      "annotations": {},
      "from": {
        "_tag": "Transformation",
        "annotations": {},
        "from": {
          "_tag": "StringKeyword",
          "annotations": {
            "Symbol(@effect/schema/annotation/Description)": "a JSON string",
            "Symbol(@effect/schema/annotation/Identifier)": "JsonString",
            "Symbol(@effect/schema/annotation/Title)": "JsonString",
          },
        },
        "to": {
          "_tag": "UnknownKeyword",
          "annotations": {
            "Symbol(@effect/schema/annotation/Title)": "unknown",
          },
        },
      },
      "to": {
        "_tag": "AnyKeyword",
        "annotations": {
          "Symbol(@effect/schema/annotation/Title)": "any",
        },
      },
    },
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > json 2`] = `
{
  "columnType": "text",
  "default": {
    "_id": "Option",
    "_tag": "Some",
    "value": null,
  },
  "nullable": true,
  "primaryKey": false,
  "schema": $union {
    "ast": {
      "_tag": "Union",
      "annotations": {},
      "types": [
        {
          "_tag": "Transformation",
          "annotations": {},
          "from": {
            "_tag": "Transformation",
            "annotations": {},
            "from": {
              "_tag": "StringKeyword",
              "annotations": {
                "Symbol(@effect/schema/annotation/Description)": "a JSON string",
                "Symbol(@effect/schema/annotation/Identifier)": "JsonString",
                "Symbol(@effect/schema/annotation/Title)": "JsonString",
              },
            },
            "to": {
              "_tag": "UnknownKeyword",
              "annotations": {
                "Symbol(@effect/schema/annotation/Title)": "unknown",
              },
            },
          },
          "to": {
            "_tag": "AnyKeyword",
            "annotations": {
              "Symbol(@effect/schema/annotation/Title)": "any",
            },
          },
        },
        {
          "_tag": "Literal",
          "annotations": {
            "Symbol(@effect/schema/annotation/Identifier)": "null",
          },
          "literal": null,
        },
      ],
    },
    "members": [
      Schema {
        "ast": {
          "_tag": "Transformation",
          "annotations": {},
          "from": {
            "_tag": "Transformation",
            "annotations": {},
            "from": {
              "_tag": "StringKeyword",
              "annotations": {
                "Symbol(@effect/schema/annotation/Description)": "a JSON string",
                "Symbol(@effect/schema/annotation/Identifier)": "JsonString",
                "Symbol(@effect/schema/annotation/Title)": "JsonString",
              },
            },
            "to": {
              "_tag": "UnknownKeyword",
              "annotations": {
                "Symbol(@effect/schema/annotation/Title)": "unknown",
              },
            },
          },
          "to": {
            "_tag": "AnyKeyword",
            "annotations": {
              "Symbol(@effect/schema/annotation/Title)": "any",
            },
          },
        },
        Symbol(@effect/schema/Schema): {
          "_A": [Function],
          "_I": [Function],
          "_R": [Function],
        },
      },
      Schema {
        "ast": {
          "_tag": "Literal",
          "annotations": {
            "Symbol(@effect/schema/annotation/Identifier)": "null",
          },
          "literal": null,
        },
        Symbol(@effect/schema/Schema): {
          "_A": [Function],
          "_I": [Function],
          "_R": [Function],
        },
      },
    ],
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > json 3`] = `
{
  "columnType": "text",
  "default": {
    "_id": "Option",
    "_tag": "Some",
    "value": {
      "name": "Bob",
    },
  },
  "nullable": true,
  "primaryKey": false,
  "schema": $union {
    "ast": {
      "_tag": "Union",
      "annotations": {},
      "types": [
        {
          "_tag": "Transformation",
          "annotations": {},
          "from": {
            "_tag": "Transformation",
            "annotations": {},
            "from": {
              "_tag": "StringKeyword",
              "annotations": {
                "Symbol(@effect/schema/annotation/Description)": "a JSON string",
                "Symbol(@effect/schema/annotation/Identifier)": "JsonString",
                "Symbol(@effect/schema/annotation/Title)": "JsonString",
              },
            },
            "to": {
              "_tag": "UnknownKeyword",
              "annotations": {
                "Symbol(@effect/schema/annotation/Title)": "unknown",
              },
            },
          },
          "to": {
            "_tag": "TypeLiteral",
            "annotations": {},
            "indexSignatures": [],
            "propertySignatures": [
              {
                "annotations": {},
                "isOptional": false,
                "isReadonly": true,
                "name": "name",
                "type": {
                  "_tag": "StringKeyword",
                  "annotations": {
                    "Symbol(@effect/schema/annotation/Description)": "a string",
                    "Symbol(@effect/schema/annotation/Title)": "string",
                  },
                },
              },
            ],
          },
        },
        {
          "_tag": "Literal",
          "annotations": {
            "Symbol(@effect/schema/annotation/Identifier)": "null",
          },
          "literal": null,
        },
      ],
    },
    "members": [
      Schema {
        "ast": {
          "_tag": "Transformation",
          "annotations": {},
          "from": {
            "_tag": "Transformation",
            "annotations": {},
            "from": {
              "_tag": "StringKeyword",
              "annotations": {
                "Symbol(@effect/schema/annotation/Description)": "a JSON string",
                "Symbol(@effect/schema/annotation/Identifier)": "JsonString",
                "Symbol(@effect/schema/annotation/Title)": "JsonString",
              },
            },
            "to": {
              "_tag": "UnknownKeyword",
              "annotations": {
                "Symbol(@effect/schema/annotation/Title)": "unknown",
              },
            },
          },
          "to": {
            "_tag": "TypeLiteral",
            "annotations": {},
            "indexSignatures": [],
            "propertySignatures": [
              {
                "annotations": {},
                "isOptional": false,
                "isReadonly": true,
                "name": "name",
                "type": {
                  "_tag": "StringKeyword",
                  "annotations": {
                    "Symbol(@effect/schema/annotation/Description)": "a string",
                    "Symbol(@effect/schema/annotation/Title)": "string",
                  },
                },
              },
            ],
          },
        },
        Symbol(@effect/schema/Schema): {
          "_A": [Function],
          "_I": [Function],
          "_R": [Function],
        },
      },
      Schema {
        "ast": {
          "_tag": "Literal",
          "annotations": {
            "Symbol(@effect/schema/annotation/Identifier)": "null",
          },
          "literal": null,
        },
        Symbol(@effect/schema/Schema): {
          "_A": [Function],
          "_I": [Function],
          "_R": [Function],
        },
      },
    ],
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > text 1`] = `
{
  "columnType": "text",
  "default": {
    "_id": "Option",
    "_tag": "None",
  },
  "nullable": false,
  "primaryKey": false,
  "schema": Schema {
    "ast": {
      "_tag": "StringKeyword",
      "annotations": {
        "Symbol(@effect/schema/annotation/Description)": "a string",
        "Symbol(@effect/schema/annotation/Title)": "string",
      },
    },
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > text 2`] = `
{
  "columnType": "text",
  "default": {
    "_id": "Option",
    "_tag": "None",
  },
  "nullable": false,
  "primaryKey": false,
  "schema": Schema {
    "ast": {
      "_tag": "StringKeyword",
      "annotations": {
        "Symbol(@effect/schema/annotation/Description)": "a string",
        "Symbol(@effect/schema/annotation/Title)": "string",
      },
    },
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > text 3`] = `
{
  "columnType": "text",
  "default": {
    "_id": "Option",
    "_tag": "Some",
    "value": null,
  },
  "nullable": true,
  "primaryKey": false,
  "schema": $union {
    "ast": {
      "_tag": "Union",
      "annotations": {},
      "types": [
        {
          "_tag": "StringKeyword",
          "annotations": {
            "Symbol(@effect/schema/annotation/Description)": "a string",
            "Symbol(@effect/schema/annotation/Title)": "string",
          },
        },
        {
          "_tag": "Literal",
          "annotations": {
            "Symbol(@effect/schema/annotation/Identifier)": "null",
          },
          "literal": null,
        },
      ],
    },
    "members": [
      Schema {
        "ast": {
          "_tag": "StringKeyword",
          "annotations": {
            "Symbol(@effect/schema/annotation/Description)": "a string",
            "Symbol(@effect/schema/annotation/Title)": "string",
          },
        },
        Symbol(@effect/schema/Schema): {
          "_A": [Function],
          "_I": [Function],
          "_R": [Function],
        },
      },
      Schema {
        "ast": {
          "_tag": "Literal",
          "annotations": {
            "Symbol(@effect/schema/annotation/Identifier)": "null",
          },
          "literal": null,
        },
        Symbol(@effect/schema/Schema): {
          "_A": [Function],
          "_I": [Function],
          "_R": [Function],
        },
      },
    ],
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > text 4`] = `
{
  "columnType": "text",
  "default": {
    "_id": "Option",
    "_tag": "Some",
    "value": "foo",
  },
  "nullable": true,
  "primaryKey": false,
  "schema": $union {
    "ast": {
      "_tag": "Union",
      "annotations": {},
      "types": [
        {
          "_tag": "Literal",
          "annotations": {},
          "literal": "foo",
        },
        {
          "_tag": "Literal",
          "annotations": {
            "Symbol(@effect/schema/annotation/Identifier)": "null",
          },
          "literal": null,
        },
      ],
    },
    "members": [
      $literal {
        "ast": {
          "_tag": "Literal",
          "annotations": {},
          "literal": "foo",
        },
        "literals": [
          "foo",
        ],
        Symbol(@effect/schema/Schema): {
          "_A": [Function],
          "_I": [Function],
          "_R": [Function],
        },
      },
      Schema {
        "ast": {
          "_tag": "Literal",
          "annotations": {
            "Symbol(@effect/schema/annotation/Identifier)": "null",
          },
          "literal": null,
        },
        Symbol(@effect/schema/Schema): {
          "_A": [Function],
          "_I": [Function],
          "_R": [Function],
        },
      },
    ],
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;

exports[`FieldDefs > text 5`] = `
{
  "columnType": "text",
  "default": {
    "_id": "Option",
    "_tag": "Some",
    "value": "foo",
  },
  "nullable": true,
  "primaryKey": false,
  "schema": $union {
    "ast": {
      "_tag": "Union",
      "annotations": {},
      "types": [
        {
          "_tag": "Literal",
          "annotations": {},
          "literal": "foo",
        },
        {
          "_tag": "Literal",
          "annotations": {
            "Symbol(@effect/schema/annotation/Identifier)": "null",
          },
          "literal": null,
        },
      ],
    },
    "members": [
      $literal {
        "ast": {
          "_tag": "Literal",
          "annotations": {},
          "literal": "foo",
        },
        "literals": [
          "foo",
        ],
        Symbol(@effect/schema/Schema): {
          "_A": [Function],
          "_I": [Function],
          "_R": [Function],
        },
      },
      Schema {
        "ast": {
          "_tag": "Literal",
          "annotations": {
            "Symbol(@effect/schema/annotation/Identifier)": "null",
          },
          "literal": null,
        },
        Symbol(@effect/schema/Schema): {
          "_A": [Function],
          "_I": [Function],
          "_R": [Function],
        },
      },
    ],
    Symbol(@effect/schema/Schema): {
      "_A": [Function],
      "_I": [Function],
      "_R": [Function],
    },
  },
}
`;
